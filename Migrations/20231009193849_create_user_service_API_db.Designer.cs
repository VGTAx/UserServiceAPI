// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserServiceAPI.Data;

#nullable disable

namespace UserServiceAPI.Migrations
{
    [DbContext(typeof(UserServiceContext))]
    [Migration("20231009193849_create_user_service_API_db")]
    partial class create_user_service_API_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("UserServiceAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Support"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            RoleName = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("UserServiceAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 32,
                            Email = "i.alexeev@gmail.com",
                            Name = "Ivan Alexeev"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            Email = "o.andreev@gmail.com",
                            Name = "Oleg Andreev"
                        },
                        new
                        {
                            Id = 3,
                            Age = 24,
                            Email = "o.petrova@gmail.com",
                            Name = "Olga Petrova"
                        },
                        new
                        {
                            Id = 4,
                            Age = 29,
                            Email = "e.ivanova@gmail.com",
                            Name = "Elena Ivanova"
                        },
                        new
                        {
                            Id = 5,
                            Age = 38,
                            Email = "p.durov@telegram.com",
                            Name = "Pavel Durov"
                        },
                        new
                        {
                            Id = 6,
                            Age = 52,
                            Email = "e.musk@spaceX.com",
                            Name = "Elon Musk"
                        },
                        new
                        {
                            Id = 7,
                            Age = 67,
                            Email = "b.gates@microsoft.com",
                            Name = "Bill Gates"
                        },
                        new
                        {
                            Id = 8,
                            Age = 62,
                            Email = "t.cook@apple.com",
                            Name = "Tim Cook"
                        },
                        new
                        {
                            Id = 9,
                            Age = 39,
                            Email = "m.zuckerberg@meta.com",
                            Name = "Mark Zuckerberg"
                        });
                });

            modelBuilder.Entity("UserServiceAPI.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 4
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 4
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("UserServiceAPI.Models.UserRole", b =>
                {
                    b.HasOne("UserServiceAPI.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserServiceAPI.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserServiceAPI.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("UserServiceAPI.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
